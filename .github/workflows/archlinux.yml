name: ArchLinux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    container: archlinux

    steps:
      - run: pacman -Syy --noconfirm
      - run: pacman -S   --noconfirm curl gcc

      - uses: actions/checkout@v4

      - run: ./ppkg --help
      - run: ./ppkg --version

      - run: ./ppkg setup

      - run: ./ppkg env

      - run: ./ppkg integrate zsh

      - run: ./ppkg update

      - run: ./ppkg search lib
      - run: ./ppkg search libzip

      - run: ./ppkg info-available libzip
      - run: ./ppkg info-available libzip version
      - run: ./ppkg info-available libzip web-url
      - run: ./ppkg info-available libzip src-url

      - run: ./ppkg depends libzip

      - run: ./ppkg install libzip

      - run: ./ppkg tree libzip

      - run: ./ppkg pack libzip -t tar.xz

      - run: ./ppkg formula-repo-list

      - run: ./ppkg ls-available
      - run: ./ppkg ls-installed
      - run: ./ppkg ls-outdated

      - run: ./ppkg is-available libzip
      - run: ./ppkg is-installed libzip
      - run: ./ppkg is-outdated  libzip || echo "not outdated"

      - run: ./ppkg uninstall libzip

      - run: ./ppkg fetch curl

      - run: ./ppkg upgrade-self

  export:
    runs-on: ubuntu-latest

    steps:
      - run: |
          cat > run.sh <<EOF
          run() {
            printf '%b\n' "\$*"
            eval "\$@"
          }

          set -e

          run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg

          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install    libzip
          run ./ppkg export.pkg libzip
          run ./ppkg export.pkg libzip -o ~/
          run ./ppkg export.pkg libzip -o a/b.pkg

          run sudo pacman -U *.pkg.tar.xz
          run pacman -Qi libzip
          EOF

      - run: |
          cat > Dockerfile <<EOF
          FROM archlinux

          RUN pacman -Syy --noconfirm && \
              pacman -S sudo curl gcc fakeroot --noconfirm && \
              groupadd --gid 1000 leleliu008 && \
              useradd  --gid 1000 --uid 1000 -m leleliu008 && \
              echo 'leleliu008 ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

          USER leleliu008
          EOF

      - run: docker build -t myarchlinux .
      - run: docker run -v $PWD:/home/leleliu008/bin -w /home/leleliu008 --name myarchlinux myarchlinux sh bin/run.sh
